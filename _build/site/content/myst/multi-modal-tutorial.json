{"kind":"Notebook","sha256":"69253889ea212468062e62a359a42b59427b68d02119293c9ead9be1ee95eb4e","slug":"multi-modal-tutorial","location":"/03_multi_modal_tutorial.ipynb","dependencies":[],"frontmatter":{"title":"Multi-Modal Tutorial ScDyO3","numbering":{"enumerator":{"template":"4.%s"}},"kernelspec":{"name":"python3","language":"python","display_name":"Python 3"},"jupytext":{"formats":"md:myst","text_representation":{"extension":".md","format_name":"myst"}},"authors":[{"nameParsed":{"literal":"Jason Manassa","given":"Jason","family":"Manassa"},"name":"Jason Manassa","orcid":"0000-0001-5167-5989","corresponding":true,"email":"jmanassa@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Miti Shah","given":"Miti","family":"Shah"},"name":"Miti Shah","orcid":"0000-0002-2142-7295","corresponding":false,"email":"mitis@umich.edu","affiliations":["Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Min Gee Cho","given":"Min Gee","family":"Cho"},"name":"Min Gee Cho","orcid":"0000-0003-4490-7352","corresponding":false,"email":"mgcho@lbl.gov","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Zichao Wendy Di","given":"Zichao Wendy","family":"Di"},"name":"Zichao Wendy Di","orcid":"0000-0002-4131-9363","corresponding":false,"email":"wendydi@anl.gov","affiliations":["Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Yi Jiang","given":"Yi","family":"Jiang"},"name":"Yi Jiang","orcid":"0000-0002-2807-1324","corresponding":false,"email":"yjiang@anl.gov","affiliations":["Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Jeffrey Fessler","given":"Jeffrey","family":"Fessler"},"name":"Jeffrey Fessler","orcid":"0000-0001-9998-3315","corresponding":false,"email":"fessler@umich.edu","affiliations":["Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Yu-Tsun Shao","given":"Yu-Tsun","family":"Shao"},"name":"Yu-Tsun Shao","orcid":"0000-0002-5574-0490","corresponding":false,"email":"yutsunsh@usc.edu","affiliations":["Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"],"id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Mary Scott","given":"Mary","family":"Scott"},"name":"Mary Scott","orcid":"0000-0002-9543-6725","corresponding":false,"email":"mary.scott@berkeley.edu","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Jonathan Schwartz","given":"Jonathan","family":"Schwartz"},"name":"Jonathan Schwartz","orcid":"0000-0002-8063-6951","corresponding":true,"email":"jtschwar@gmail.com","affiliations":["Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"],"id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Robert Hovden","given":"Robert","family":"Hovden"},"name":"Robert Hovden","orcid":"0000-0002-3403-8803","corresponding":true,"email":"hovden@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-9"}],"date":"2024-6-28","subject":"Tutorial","keywords":["STEM","HAADF","EELS","EDX","Fused Multi-Modal"],"affiliations":[{"id":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA","name":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA","name":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","name":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA"},{"id":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA","name":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"},{"id":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA","name":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA","name":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA","name":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"},{"id":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA","name":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"},{"id":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA","name":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"}],"abbreviations":{"DOI":"digital object identifier","FFT":"fast Fourier transform","HAADF":"high angle annular dark field","EELS":"elastic energy loss spectroscopy","EDX":"energy-dispersive x-ray spectroscopy","EDS":"energy-dispersive x-ray spectroscopy","MM":"multi-modal","TV":"total variation","GP":"gradient projection method","FGP":"fast gradient projection method","STEM":"scanning transmission electron microscopy","SNR":"signal-to-noise ratio","tif":"tag image file format"},"thumbnail":"/Figure_3_Output-b4e6e146c9b14365e5681303f28d157f.png","thumbnailOptimized":"/Figure_3_Output-b4e6e146c9b14365e5681303f28d157f.webp","exports":[{"format":"ipynb","filename":"03_multi_modal_tutorial.ipynb","url":"/03_multi_modal_tutor-93ea80b087d467f6da5310d3aa783775.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Guided Computation of Fused Multi-Modal Electron Microscopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yhAMp1dfH9"}],"identifier":"guided-computation-of-fused-multi-modal-electron-microscopy","label":"Guided Computation of Fused Multi-Modal Electron Microscopy","html_id":"guided-computation-of-fused-multi-modal-electron-microscopy","implicit":true,"key":"nhZoeql6yI"},{"type":"block","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This tutorial describes how you can fuse your ","key":"aOcZmCDy6Y"},{"type":"abbreviation","title":"elastic energy loss spectroscopy","children":[{"type":"text","value":"EELS","key":"HCTQCtw7qS"}],"key":"BbkiGNovwm"},{"type":"text","value":"/","key":"NM7qyW0Plo"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"dq1xojJLij"}],"key":"U3gyydkUzR"},{"type":"text","value":" maps with ","key":"omocsh2GZl"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"znbAtPO7Fk"}],"key":"BzbLOnC1S5"},{"type":"text","value":" or similar elastic imaging modalities to improve chemical resolution. This is Tutorial 1 of 2 where we look at an atomic resolution ","key":"he4SHNJ5Rz"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"brc79ZqZJs"}],"key":"DE0xBmjTgZ"},{"type":"text","value":" and ","key":"ShEHpHUMq3"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"jEWESSKBsq"}],"key":"mXumiypER5"},{"type":"text","value":" dataset of DyScO","key":"XO3wa908nK"},{"type":"subscript","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"3","key":"SqwTlBfxB2"}],"key":"axz6XJveSj"},{"type":"text","value":". The multi-modal data fusion workflow relies on Python, and requires minimal user input with <10 tunable lines. Both here and in the Mathematical Overview section we outline best practices for these adjustments.  Within a few minutes, datasets such as the one in this tutorial can be transformed into resolution enhanced chemical maps. (Figure 4.1)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"n1EWE5k0Lm"}],"key":"pYx26a8PaK"}],"data":{"part":"Code Walkthrough"},"key":"GKD9WQ6v2L"},{"type":"block","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"container","kind":"figure","identifier":"raw vs fused dysco$_3$","label":"Raw vs Fused DyScO$_3$","children":[{"type":"image","url":"/Figure_3_Output-b4e6e146c9b14365e5681303f28d157f.png","alt":"Comparison of raw input vs fused multi-modal DyScO_3 HAADF elastic and EDX inelastic images","width":"700px","data":{"altTextIsAutoGenerated":true},"key":"c313NfRiT5","urlSource":"./figs/Figure_3_Output.png","urlOptimized":"/Figure_3_Output-b4e6e146c9b14365e5681303f28d157f.webp"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"Raw vs Fused DyScO$_3$","identifier":"raw vs fused dysco$_3$","html_id":"raw-vs-fused-dysco-3","enumerator":"4.1","children":[{"type":"text","value":"Figure ","key":"UmoDXARTMH"},{"type":"text","value":"4.1","key":"nkVKAwMcNT"},{"type":"text","value":":","key":"uGKQDV8TgQ"}],"template":"Figure %s:","key":"wG0T6tvY3e"},{"type":"text","value":"Comparison of raw input vs fused multi-modal DyScO","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KSMCe132Ec"},{"type":"subscript","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"3","key":"YZFcCTQRY9"}],"key":"ouaqOjICcX"},{"type":"text","value":" ","key":"ccDvBEx3GK"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"KylC228AHg"}],"key":"idfM9HEgzS"},{"type":"text","value":" elastic and ","key":"MnR8bkXNWT"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"YALp4rqyWS"}],"key":"Ag21qwvBaa"},{"type":"text","value":" inelastic images","key":"e7wS3dfJ9e"}],"key":"qoDD9tILTh"}],"key":"vTfX6yOUhu"}],"enumerator":"4.1","html_id":"raw-vs-fused-dysco-3","key":"TMEkH2b92y"},{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 0: Experimental Requirements","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"x1GvQREycU"}],"key":"SEZvdHLRcu"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"To reconstruct using fused multi-modal electron microscopy you need to collect both elastic (e.g. ","key":"dnj5RNBNz0"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"L9jr5NUH7o"}],"key":"qKk0ty1ZH5"},{"type":"text","value":") and inelastic (e.g. ","key":"er28UwhGVU"},{"type":"abbreviation","title":"elastic energy loss spectroscopy","children":[{"type":"text","value":"EELS","key":"rOsAttbQHl"}],"key":"UQwqhSioeV"},{"type":"text","value":" / ","key":"DDI0LF33xt"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"RY90B8EKyR"}],"key":"SAlJpzdEWZ"},{"type":"text","value":") maps of your material. For the elastic signal, it is important that it provides Z-contrast of your elements. For the inelastic signal, you should have all chemistries in your sample mapped. Solving for under-determined chemical maps, or using difficult to interpret elastic signals are outside the scope of this tutorial. The collected chemical maps and ","key":"xi0HxXqCGo"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"wfChQl7rMQ"}],"key":"DZCjzs0Nd0"},{"type":"text","value":" must all have the same dimensionality, i.e. the same image size and number of pixels.  For this reason, we recommend using the ","key":"eQsjIegCWX"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"xURZGEp76t"}],"key":"oG0HhKkbC1"},{"type":"text","value":" signal that is simultaneously collected when taking an ","key":"cr9hjN9mRV"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"vUh6fbZZCN"}],"key":"cCX7UmibSG"},{"type":"text","value":"/","key":"YvsHONLW9p"},{"type":"abbreviation","title":"elastic energy loss spectroscopy","children":[{"type":"text","value":"EELS","key":"bZ5dJPYQGO"}],"key":"RBDD9y7qnZ"},{"type":"text","value":" scan","key":"ezqeLLvpf5"}],"key":"FJqFYO1IsU"}],"key":"VGlggEcyoj"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 1: Python Imports","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"CY4Db0pqtM"}],"key":"C8xZLwlceL"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"First, we import standard python packages alongside our custom class of functions for data fusion called ","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"a9NAFN5wPJ"},{"type":"link","url":"https://github.com/jtschwar/Multi-Modal-2D-Data-Fusion/blob/170fea3292da7e6390bfff7236610eb0c8077ff7/EDX/fusion_utils.py","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"fusion_utils","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"ArknneYcBE"}],"urlSource":"https://github.com/jtschwar/Multi-Modal-2D-Data-Fusion/blob/170fea3292da7e6390bfff7236610eb0c8077ff7/EDX/fusion_utils.py","data":{"kind":"file","org":"jtschwar","repo":"Multi-Modal-2D-Data-Fusion","reference":"170fea3292da7e6390bfff7236610eb0c8077ff7","file":"EDX/fusion_utils.py","raw":"https://raw.githubusercontent.com/jtschwar/Multi-Modal-2D-Data-Fusion/170fea3292da7e6390bfff7236610eb0c8077ff7/EDX/fusion_utils.py"},"internal":false,"protocol":"github","key":"zNRxyLvugV"},{"type":"text","value":". The fusion_utils package contains 3 functions and a class of ","key":"qqadkrTm9C"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"mKrxLrAxIM"}],"key":"zA009c6gtx"},{"type":"text","value":" functions: save_data(), plot_convergence(), create_weighted_measurement_matrix(), and tvlib(). The save_data function saves the fused images into .","key":"k44oSZROpZ"},{"type":"abbreviation","title":"tag image file format","children":[{"type":"text","value":"tif","key":"G9zimNqTw8"}],"key":"ce34p2zeRw"},{"type":"text","value":" files and all the parameters and matrix data into a .h5 file. Plot_convergence plots the convergence of the cost functions. Create_weighted_measurement_matrix is for generating the first part of our cost function that relates the elastic and inelastic modalities. Finally, the class of functions called tvlib performs the Fast Gradient Project (","key":"wwqD34OFkh"},{"type":"abbreviation","title":"fast gradient projection method","children":[{"type":"text","value":"FGP","key":"ZzbD9R17sM"}],"key":"HPsnQT6sV7"},{"type":"text","value":") method of ","key":"Iuieu5WuKj"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"iFtEEH0NOS"}],"key":"GDTFRlD5vR"},{"type":"text","value":" image denoising, which deblurs output images while preserving edges.","key":"AIXkvKFaZ5"}],"key":"ksYUTKWbLq"}],"key":"hWzmmZmHEt"}],"key":"bvZYDtO6wE"}],"key":"juaFZdLxYP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import data.fusion_utils as utils\nfrom scipy.sparse import spdiags\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm \nimport numpy as np","key":"UxguRKqrs6"},{"type":"output","id":"KcF7mOaOh1Us6Ux5G8-wk","data":[],"key":"xwFbNwEBGU"}],"key":"g1ZqpxWuV8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 2: Load your data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bq0w3bgOHk"}],"key":"MgTBSjmgJz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Load your inelastic and elastic data. Define the element names and their corresponding atomic weights. For the sake of this tutorial a generic .npz file is used, but for .dm3,.dm4,.emd, or another EM file format, just extract the 2D image data into numpy matrices. In Tutorial 2 this is shown by extracting from a .h5 file. Your elastic data should be stored in the ","key":"AnEMrwoD1a"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"RDHr7jWikx"}],"key":"HORwmdvgnJ"},{"type":"text","value":" variable, and your inelastic data (","key":"ZOcXpPzvQI"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"dYGSRBIwnc"}],"key":"a3L4UIjPji"},{"type":"text","value":"/","key":"vTv6FeBNgF"},{"type":"abbreviation","title":"elastic energy loss spectroscopy","children":[{"type":"text","value":"EELS","key":"laL0nSQoTm"}],"key":"QhpvwOtYIj"},{"type":"text","value":") should be stored in the chemMap variable.","key":"VaiJezfQ0Y"}],"key":"XD6gEHVreh"}],"key":"UkbQUwvBCf"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Loading alternate file formats","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RbmHXJhQEJ"}],"key":"jF3HZ301Fe"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"If you are loading data from a .dm3, .dm4 or .emd file, we recommend you use HyperSpy.  The documentation for loading and saving data from those file types can be found ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"k1E7Z6lS3g"},{"type":"link","url":"https://hyperspy.org/hyperspy-doc/v1.3/user_guide/io.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WsoeR04nSH"}],"urlSource":"https://hyperspy.org/hyperspy-doc/v1.3/user_guide/io.html","key":"RF5aY2SX7F"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uuyaiYlmLI"}],"key":"ojWuqvt7bi"}],"key":"gDJBLMMcAk"}],"key":"bYdj9M2VHS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"data = np.load('data/PTO_Trilayer_dataset.npz')\n# Define element names and their atomic weights\nelem_names=['Sc', 'Dy', 'O']\nelem_weights=[21,66,8]\n# Parse elastic HAADF data and inelastic chemical maps based on element index from line above\nHAADF = data['HAADF']\nxx = np.array([],dtype=np.float32)\nfor ee in elem_names:\n\n\t# Read Chemical Map for Element \"ee\"\n\tchemMap = data[ee]\n\n    # Check if chemMap has the same dimensions as HAADF\n\tif chemMap.shape != HAADF.shape:\n\t\traise ValueError(f\"The dimensions of {ee} chemical map do not match HAADF dimensions.\")\n\t\n\t# Set Noise Floor to Zero and Normalize Chemical Maps\n\tchemMap -= np.min(chemMap); chemMap /= np.max(chemMap)\n\n\t# Concatenate Chemical Map to Variable of Interest\n\txx = np.concatenate([xx,chemMap.flatten()])","key":"pzTfFhnTy7"},{"type":"output","id":"X6roiXnetzkjy2HUQ7a7z","data":[],"key":"ZdK7cyjBoi"}],"key":"dMarFvKLZI"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 3: Reshape your data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OtKfOqAzuK"}],"key":"CiGn9XkDrc"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Run the following cell without changing anything.  This cell reshapes your data and relates the elastic to the inelastic modalities within a cost function, which is described in greater depth in the Mathematical Methods section.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"D5AZxNJuzV"}],"key":"vmSizhS9Eg"}],"key":"p02j6v597R"},{"type":"admonition","kind":"danger","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Caution!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Tf4vLGInOe"}],"key":"jvUTUwpWuR"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Do not change the code below.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KjTOCsrYMk"}],"key":"g6yMCeYvN0"}],"key":"zoKi0e79RN"}],"key":"oRm8wqjV1H"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Make Copy of Raw Measurements for Poisson Maximum Likelihood Term \nxx0 = xx.copy()\n\n# Incoherent linear imaging for elastic scattering scales with atomic number Z raised to γ  ∈ [1.4, 2]\ngamma = 1.6 \n\n# Image Dimensions\n(nx, ny) = chemMap.shape; nPix = nx * ny\nnz = len(elem_names)\n\n# C++ TV Min Regularizers\nreg = utils.tvlib(nx,ny)\n\n# Data Subtraction and Normalization \nHAADF -= np.min(HAADF); HAADF /= np.max(HAADF)\nHAADF=HAADF.flatten()\n\n# Create Summation Matrix\nA = utils.create_weighted_measurement_matrix(nx,ny,nz,elem_weights,gamma,1)","key":"NI9dk4F2BH"},{"type":"output","id":"gmuzKgDwp2cx4jojXOBOq","data":[],"key":"mTocyCJsZ8"}],"key":"FuVNyUHt53"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","class":"tip ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Optional","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rKjIpxtC0x"}],"key":"KSYACg1BvJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Plot your raw elastic/inelastic data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"twSQz72j1L"}],"key":"qG6uefA457"}],"key":"ZFmXiNc6ux"}],"key":"Amxvp8Zmxs"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(2,len(elem_names)+1,figsize=(12,8))\nax = ax.flatten()\nax[0].imshow(HAADF.reshape(nx,ny),cmap='gray'); ax[0].set_title('HAADF'); ax[0].axis('off')\nax[1+len(elem_names)].imshow(HAADF.reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[1+len(elem_names)].set_title('HAADF Cropped'); ax[1+len(elem_names)].axis('off')\n\nfor ii in range(len(elem_names)):\n    ax[ii+1].imshow(xx0[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny),cmap='gray'); ax[ii+1].set_title(elem_names[ii]); ax[ii+1].axis('off')\n    ax[ii+2+len(elem_names)].imshow(xx0[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[ii+2+len(elem_names)].set_title(elem_names[ii]+' Cropped'); ax[ii+2+len(elem_names)].axis('off')\nplt.show()","key":"QoNC798H6Y"},{"type":"output","id":"DgzrxN2EvXP7b4zgkpKRQ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ed4540bc10f457c634ad8d13b7a9ea11","path":"/ed4540bc10f457c634ad8d13b7a9ea11.png"},"text/plain":{"content":"<Figure size 1200x800 with 8 Axes>","content_type":"text/plain"}}}],"key":"lDZe89MERb"}],"key":"ujq4kGzbyi"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 4: Fine tune your weights for each of the three parts of the cost function","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m1SrbORqzm"}],"key":"dj0RtPdQSH"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The first weight, labeled as lambda","key":"iInlgV6GVN"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"ZN9MA9gL66"}],"key":"GW9S2e0b1e"},{"type":"text","value":", is defined as the inverse of the number of elements to normalize each element’s contribution. This prevents a single element from disproportionately influencing the solution.  The second weight, labeled as lambdaChem, is our data consistency term and we typically find to be ideal between 0.05 and 0.3 although the total range for this term is 0 to 1. The final weight is lambda","key":"q6FSCv3Hnq"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"mh4IkKvHSF"}],"key":"KWk8PBhBsM"},{"type":"text","value":" and it dictates how strong our Total Variation denoising is. In order to preserve fine features while removing noise, we find that a <0.2 lambda","key":"NSL3ibxCZn"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"WJs49Jv7eT"}],"key":"AZWv0wIFit"},{"type":"text","value":" value is ideal. nIter is the number of iterations the cost function will run for. although we typically see convergence within 10 iterations, we recommend using 30 iterations to make sure convergence is met long term. the variable bkg represents the background and we use this number to perform minor background subtraction to try and reduce noise; we recommend keeping this variable small. Finally, we give the user the option to turn the ","key":"PSyODqJUaY"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"OO8OzpYgyK"}],"key":"zszqueLFQX"},{"type":"text","value":" regularization off, and define a nIter_","key":"BRVoZFiVkN"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"CZ5ys7NB1l"}],"key":"H7moXpWCBG"},{"type":"text","value":" variable to define the number of iterations the ","key":"UtwKNjIEcZ"},{"type":"abbreviation","title":"fast gradient projection method","children":[{"type":"text","value":"FGP","key":"ZtTh3GJhOL"}],"key":"LoM4ayzMp9"},{"type":"text","value":" ","key":"C5szRzg1Rt"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"Mx6zfnRUgj"}],"key":"aDSgMRgyIt"},{"type":"text","value":" algorithm should run for.","key":"FGMumgjM0d"}],"key":"pZeoDYFUEf"}],"key":"DkOijdMXCD"}],"key":"ZnX1zDn1Eg"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Convergence Parameters\nlambdaHAADF = 1/nz # Do not modify this\nlambdaChem = 0.08\nlambdaTV = 0.15; #Typically between 0.001 and 1\nnIter = 30 # Typically 10-15 will suffice\nbkg = 2.4e-1\n\n# FGP TV Parameters\nregularize = True; nIter_TV = 3; ","key":"Yl7XsfFPKu"},{"type":"output","id":"5FPEMHb8xxYDl6xF5Ls80","data":[],"key":"O07rhfG0PO"}],"key":"zuG7vJLDSs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 5: Run the Fused Multi-Modal algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hf8OZC8RdX"}],"key":"A7omhpVHF8"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The code will typically finsh running in <10 seconds even when runnings for hundreds of iterations.  For most applications, the number of iterations will be <100 and the code should run in under 3 seconds.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"J504cNQkvP"}],"key":"nQKdbap6L4"}],"key":"xMCRy8QLWX"},{"type":"admonition","kind":"danger","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Caution!","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ABTURTKa6l"}],"key":"rdV6Ii69Rx"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Do not change the code below.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"btb7QokeYh"}],"key":"Kz9GNWnx2C"}],"key":"V6m1o1NKZo"}],"key":"qa87iIqN6g"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# xx represents the flattened 1D elastic maps we are trying to improve via the cost function\nxx = xx0.copy()\n\n# Auxiliary Functions for measuring the cost functions\nlsqFun = lambda inData : 0.5 * np.linalg.norm(A.dot(inData**gamma) - HAADF) **2\npoissonFun = lambda inData : np.sum(xx0 * np.log(inData + 1e-8) - inData)\n\n# Main Loop\n\n# Initialize the three cost functions components \ncostHAADF = np.zeros(nIter,dtype=np.float32); costChem = np.zeros(nIter, dtype=np.float32); costTV = np.zeros(nIter, dtype=np.float32);\n\nfor kk in tqdm(range(nIter)):\n\t# Solve for the first two optimization functions $\\Psi_1$ and $\\Psi_2$\n\txx -=  gamma * spdiags(xx**(gamma - 1), [0], nz*nx*ny, nz*nx*ny) * lambdaHAADF * A.transpose() * (A.dot(xx**gamma) - HAADF) + lambdaChem * (1 - xx0 / (xx + bkg))\n\n\t# Enforce positivity constraint\n\txx[xx<0] = 0\n\n\t# FGP Regularization if turned on\n\tif regularize:\n\t\tfor zz in range(nz):\n\t\t\txx[zz*nPix:(zz+1)*nPix] = reg.fgp_tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny), lambdaTV, nIter_TV).flatten()\n\n\t\t\t# Measure TV Cost Function\n\t\t\tcostTV[kk] += reg.tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny) )\n\t\t\t\n\t# Measure $\\Psi_1$ and $\\Psi_2$ Cost Functions\n\tcostHAADF[kk] = lsqFun(xx); costChem[kk] = poissonFun(xx)","key":"Hu6IaDvl3a"},{"type":"output","id":"V4Dfq6kvgk3x1SuX3sv6G","data":[{"name":"stderr","output_type":"stream","text":"100%|███████████████████████████████████████████████████| 30/30 [00:00<00:00, 51.52it/s]\n"}],"key":"ugqZAt0dfz"}],"key":"g64cv91MYN"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 6: Assess Convergence","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q12amTxsY9"}],"key":"MmjQTfu48m"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Assess convergence by confirming that all 3 cost functions asymptotically approach a low value as shown in the example plots below.   You should see all three curves start high and approach a plateau without any substantial changes. Sometimes the metric value may appear as a exponential decay and othertimes it may overshoot briefly superficially resembling the shape of a Lennard-Jones potential. Look out for incomplete convergence or severe oscillations. If you do not have convergence, the easiest solution is to run the reconstruction for more iterations or adjust the associated lambda value for that term.  For example, if the lambdaCHEM cost function does not show convergence, try change the lambdaCHEM value to something lower.  Repeat until all 3 cost functions show convergence.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"B7DdHWTBys"}],"key":"mCXwZ0bGFZ"}],"key":"RBtuWXqZib"},{"type":"container","kind":"figure","identifier":"convergence","label":"convergence","children":[{"type":"image","url":"/Figure_4_Convergence-c7d1526941225f8c227461abf8e8c2b1.png","alt":"Convergence of 3 subparts of the multi-modal cost function.  The top plot represents the first term that is dictated by \\lambda_{\\text{HAADF}}.  The middle plot represents the second term that is dictated by \\lambda_{\\text{Chem}}. The bottom plot represents the third TV term that is dictated by \\lambda_{\\text{TV}}.","width":"700px","data":{"altTextIsAutoGenerated":true},"key":"fEsxdlDbL7","urlSource":"./figs/Figure_4_Convergence.png","urlOptimized":"/Figure_4_Convergence-c7d1526941225f8c227461abf8e8c2b1.webp"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"convergence","identifier":"convergence","html_id":"convergence","enumerator":"4.2","children":[{"type":"text","value":"Figure ","key":"SeWNT5NN4i"},{"type":"text","value":"4.2","key":"XdAZlu4o9p"},{"type":"text","value":":","key":"g9eiE51YMr"}],"template":"Figure %s:","key":"MO0AmYZSuO"},{"type":"text","value":"Convergence of 3 subparts of the multi-modal cost function.  The top plot represents the first term that is dictated by ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"AO5suM97hw"},{"type":"inlineMath","value":"\\lambda_{\\text{HAADF}}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>λ</mi><mtext>HAADF</mtext></msub></mrow><annotation encoding=\"application/x-tex\">\\lambda_{\\text{HAADF}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">HAADF</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"OSPllCrrO8"},{"type":"text","value":".  The middle plot represents the second term that is dictated by ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"xWMchFSTKy"},{"type":"inlineMath","value":"\\lambda_{\\text{Chem}}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>λ</mi><mtext>Chem</mtext></msub></mrow><annotation encoding=\"application/x-tex\">\\lambda_{\\text{Chem}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">Chem</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"eaFWe2rEce"},{"type":"text","value":". The bottom plot represents the third ","key":"VVLuzDFcO3"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"Hbl5IRbtwu"}],"key":"yx5jnE4w7f"},{"type":"text","value":" term that is dictated by ","key":"MRXMq8A5bb"},{"type":"inlineMath","value":"\\lambda_{\\text{TV}}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>λ</mi><mtext>TV</mtext></msub></mrow><annotation encoding=\"application/x-tex\">\\lambda_{\\text{TV}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">TV</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"elHBPQQYTo"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"x4saPeISlu"}],"key":"bQvLhkbSBd"}],"key":"eIRy9WuJRs"}],"enumerator":"4.2","html_id":"convergence","key":"yzIGwux6JS"},{"type":"admonition","class":"attention","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Be careful with ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"FPaMxesBfh"},{"type":"inlineMath","value":"\\lambda_{\\text{TV}}","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>λ</mi><mtext>TV</mtext></msub></mrow><annotation encoding=\"application/x-tex\">\\lambda_{\\text{TV}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">TV</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"TD6msVheHU"},{"type":"text","value":"!","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"xx43jjvtBf"}],"key":"WVJZfwGyLh"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"You may see convergence with an over or under weighted ","key":"ngMxP2MUEP"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"hv0xWqcgKJ"}],"key":"j5wWclRtDE"},{"type":"text","value":" term.  Under weighting the ","key":"vvffY54SKv"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"p93HGM25ZG"}],"key":"mXxRtACFIL"},{"type":"text","value":" term results in noisy reconstructions, while over weighting results in blurring and loss of features in the image.  Below is an example of the output images from under, over, and just right ","key":"EcJ6YNeb7e"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"b7IBsq5stf"}],"key":"iEDkFgRUJe"},{"type":"text","value":" weights. Err on the side of under weighting the ","key":"L30yOjZIii"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"bascQ0eatR"}],"key":"VXrQ1WJ8hi"},{"type":"text","value":" term  because noise is familiar to the data, but when oversmoothing, the added ar","key":"KdL5NqMRCL"},{"type":"abbreviation","title":"tag image file format","children":[{"type":"text","value":"tif","key":"p0XXcj49JE"}],"key":"LNaVQ8M3ir"},{"type":"text","value":"acts are unphysical and can lead to faulty interpretations.","key":"ZwNDz5N1Iw"}],"key":"mrPaN8ZPPq"}],"key":"u4Vib23lTD"},{"type":"container","kind":"figure","identifier":"tv_weights","label":"TV_weights","children":[{"type":"image","url":"/Figure_5_TV-9e7be1dd3efb05625e49299307773c33.png","alt":"Comparison of TV weighting across different chemistries and HAADF. Too low of a TV results in noise and artifacts across images.  Proper TV preserves fine features like the dumbell shape of the Dy particles, while reducing noise.  High TV oversmoothes the image resulting in loss of important features for analysis.","width":"700px","data":{"altTextIsAutoGenerated":true},"key":"Ae50fHIRf8","urlSource":"./figs/Figure_5_TV.png","urlOptimized":"/Figure_5_TV-9e7be1dd3efb05625e49299307773c33.webp"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"TV_weights","identifier":"tv_weights","html_id":"tv-weights","enumerator":"4.3","children":[{"type":"text","value":"Figure ","key":"CUoKpWeUZ2"},{"type":"text","value":"4.3","key":"F4pYDQZGO0"},{"type":"text","value":":","key":"VTRPC398u5"}],"template":"Figure %s:","key":"DeJfst9Z9k"},{"type":"text","value":"Comparison of ","key":"xHTd5EtC8F"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"KaYNSaXljs"}],"key":"SjkkRVavkk"},{"type":"text","value":" weighting across different chemistries and ","key":"dtxfDRldH3"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"kvwNvhiH1R"}],"key":"TmDiFFafcD"},{"type":"text","value":". Too low of a ","key":"K9t0jxSTmW"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"leJmCuC0EK"}],"key":"V9enBc6rOj"},{"type":"text","value":" results in noise and ar","key":"GKXN6IMwVt"},{"type":"abbreviation","title":"tag image file format","children":[{"type":"text","value":"tif","key":"zNFoyARtiR"}],"key":"pWdcHwjqNd"},{"type":"text","value":"acts across images.  Proper ","key":"G4DUSTkXvU"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"XrDakU3UD4"}],"key":"Ry7RYCJ3FA"},{"type":"text","value":" preserves fine features like the dumbell shape of the Dy particles, while reducing noise.  High ","key":"uflvVgwLrt"},{"type":"abbreviation","title":"total variation","children":[{"type":"text","value":"TV","key":"yMS3Qcqaef"}],"key":"Fbn9bSalyj"},{"type":"text","value":" oversmoothes the image resulting in loss of important features for analysis.","key":"b6LbFIcIgJ"}],"key":"Yoer9QiiaC"}],"key":"hAWNtRhUzZ"}],"enumerator":"4.3","html_id":"tv-weights","key":"AvaWndcfP0"}],"key":"iHH8iWHyms"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Display Cost Functions and Descent Parameters\nutils.plot_convergence(costHAADF, lambdaHAADF, costChem, lambdaChem, costTV, lambdaTV)\n# Show Reconstructed Signal\nfig, ax = plt.subplots(2,len(elem_names)+1,figsize=(12,8))\nax = ax.flatten()\nax[0].imshow((A.dot(xx**gamma)).reshape(nx,ny),cmap='gray'); ax[0].set_title('HAADF'); ax[0].axis('off')\nax[1+len(elem_names)].imshow((A.dot(xx**gamma)).reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[1+len(elem_names)].set_title('HAADF Cropped'); ax[1+len(elem_names)].axis('off')\n\nfor ii in range(len(elem_names)):\n    ax[ii+1].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny),cmap='gray'); ax[ii+1].set_title(elem_names[ii]); ax[ii+1].axis('off')\n    ax[ii+2+len(elem_names)].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[ii+2+len(elem_names)].set_title(elem_names[ii]+' Cropped'); ax[ii+2+len(elem_names)].axis('off')\nplt.show()","key":"QJEvpfExeI"},{"type":"output","id":"kswJGpX1eAHY7AbSiK2Pj","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"aaf7f404e32b3474c64b8fc6769bac9d","path":"/aaf7f404e32b3474c64b8fc6769bac9d.png"},"text/plain":{"content":"<Figure size 1200x600 with 3 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1e746d41cf5efe468b4e78d277064878","path":"/1e746d41cf5efe468b4e78d277064878.png"},"text/plain":{"content":"<Figure size 1200x800 with 8 Axes>","content_type":"text/plain"}}}],"key":"syfn7W7qU4"}],"key":"WqOev07bgL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Try it yourself!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OttsMk41J9"}],"key":"xbhiBxHKE2"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Try changing lambda parameters to see how convergence is effected","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WphbnJi3dL"}],"key":"m7bsoDZTqY"}],"key":"hicf8LtLNh"}],"key":"sReW0ULuN9"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"container","kind":"figure","identifier":"try it yourself!","label":"Try it yourself!","children":[{"type":"_lift","alt":"Lambda parameter tuning","remove-input":true,"data":{"altTextIsAutoGenerated":true},"source":{"label":"app:tutorialone"},"key":"ihs9JHPsn8"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"Try it yourself!","identifier":"try it yourself!","html_id":"try-it-yourself","enumerator":"4.4","children":[{"type":"text","value":"Figure ","key":"nQt14zIxio"},{"type":"text","value":"4.4","key":"TEGmHb39nI"},{"type":"text","value":":","key":"K5dd7aYKug"}],"template":"Figure %s:","key":"wVv8NsQ9GB"},{"type":"text","value":"Lambda parameter tuning","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"moEZ25qPhq"}],"key":"KrqPaW27iJ"}],"key":"WV94lkJ14c"}],"enumerator":"4.4","html_id":"try-it-yourself","source":{"label":"app:tutorialone"},"key":"KVrp86BQzu"}],"key":"fUm3XD5jZw"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 7: Save your data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dD4Pzn1nJe"}],"key":"B2iPbNOStM"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Define the folder you would like to save to. The output images and data will be saved to .","key":"tyM9maFF8i"},{"type":"abbreviation","title":"tag image file format","children":[{"type":"text","value":"tif","key":"ESn2ibObHv"}],"key":"ITj4irPEJ7"},{"type":"text","value":" and .h5 file formats","key":"aoiWCcGOl3"}],"key":"gg2Anjq0wB"}],"key":"klGSHtocMy"}],"key":"u3urvFZUdO"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"save_folder_name='test'\nutils.save_data(save_folder_name, xx0, xx, HAADF, A.dot(xx**gamma), elem_names, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)","key":"PDIiCUV11b"},{"type":"output","id":"2j8QR7G95XgsJRHYAonrl","data":[{"ename":"FileNotFoundError","evalue":"[Errno 2] Unable to synchronously create file (unable to open file: name = 'test/Fused_Reconstruction.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 602)","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)\nCell \u001b[0;32mIn[15], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m save_folder_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtest\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m----> 2\u001b[0m \u001b[43mutils\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msave_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43msave_folder_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxx0\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mA\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdot\u001b[49m\u001b[43m(\u001b[49m\u001b[43mxx\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mgamma\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43melem_names\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mny\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostChem\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostTV\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaChem\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaTV\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgamma\u001b[49m\u001b[43m)\u001b[49m\n\nFile \u001b[0;32m~/Desktop/PhD/Projects/20240312_2D_tutorial/data/fusion_utils.py:9\u001b[0m, in \u001b[0;36msave_data\u001b[0;34m(folder_name, chem_original, chem_fused, haadf_original, haadf_fused, eList, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21msave_data\u001b[39m(folder_name, chem_original, chem_fused, haadf_original, haadf_fused, eList, nx, ny,costHAADF,costChem,costTV,lambdaHAADF,lambdaChem,lambdaTV,gamma):\n\u001b[0;32m----> 9\u001b[0m     file \u001b[38;5;241m=\u001b[39m \u001b[43mh5py\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mFile\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfolder_name\u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m/Fused_Reconstruction.h5\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mw\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m     10\u001b[0m     file\u001b[38;5;241m.\u001b[39mcreate_dataset(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mraw_haadf\u001b[39m\u001b[38;5;124m'\u001b[39m, data\u001b[38;5;241m=\u001b[39mhaadf_original)\n\u001b[1;32m     11\u001b[0m     file\u001b[38;5;241m.\u001b[39mcreate_dataset(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfused_haadf\u001b[39m\u001b[38;5;124m'\u001b[39m, data\u001b[38;5;241m=\u001b[39mhaadf_fused)\n\nFile \u001b[0;32m~/miniforge3/envs/fusion/lib/python3.12/site-packages/h5py/_hl/files.py:562\u001b[0m, in \u001b[0;36mFile.__init__\u001b[0;34m(self, name, mode, driver, libver, userblock_size, swmr, rdcc_nslots, rdcc_nbytes, rdcc_w0, track_order, fs_strategy, fs_persist, fs_threshold, fs_page_size, page_buf_size, min_meta_keep, min_raw_keep, locking, alignment_threshold, alignment_interval, meta_block_size, **kwds)\u001b[0m\n\u001b[1;32m    553\u001b[0m     fapl \u001b[38;5;241m=\u001b[39m make_fapl(driver, libver, rdcc_nslots, rdcc_nbytes, rdcc_w0,\n\u001b[1;32m    554\u001b[0m                      locking, page_buf_size, min_meta_keep, min_raw_keep,\n\u001b[1;32m    555\u001b[0m                      alignment_threshold\u001b[38;5;241m=\u001b[39malignment_threshold,\n\u001b[1;32m    556\u001b[0m                      alignment_interval\u001b[38;5;241m=\u001b[39malignment_interval,\n\u001b[1;32m    557\u001b[0m                      meta_block_size\u001b[38;5;241m=\u001b[39mmeta_block_size,\n\u001b[1;32m    558\u001b[0m                      \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[1;32m    559\u001b[0m     fcpl \u001b[38;5;241m=\u001b[39m make_fcpl(track_order\u001b[38;5;241m=\u001b[39mtrack_order, fs_strategy\u001b[38;5;241m=\u001b[39mfs_strategy,\n\u001b[1;32m    560\u001b[0m                      fs_persist\u001b[38;5;241m=\u001b[39mfs_persist, fs_threshold\u001b[38;5;241m=\u001b[39mfs_threshold,\n\u001b[1;32m    561\u001b[0m                      fs_page_size\u001b[38;5;241m=\u001b[39mfs_page_size)\n\u001b[0;32m--> 562\u001b[0m     fid \u001b[38;5;241m=\u001b[39m \u001b[43mmake_fid\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muserblock_size\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfapl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfcpl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mswmr\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mswmr\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    564\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(libver, \u001b[38;5;28mtuple\u001b[39m):\n\u001b[1;32m    565\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_libver \u001b[38;5;241m=\u001b[39m libver\n\nFile \u001b[0;32m~/miniforge3/envs/fusion/lib/python3.12/site-packages/h5py/_hl/files.py:241\u001b[0m, in \u001b[0;36mmake_fid\u001b[0;34m(name, mode, userblock_size, fapl, fcpl, swmr)\u001b[0m\n\u001b[1;32m    239\u001b[0m     fid \u001b[38;5;241m=\u001b[39m h5f\u001b[38;5;241m.\u001b[39mcreate(name, h5f\u001b[38;5;241m.\u001b[39mACC_EXCL, fapl\u001b[38;5;241m=\u001b[39mfapl, fcpl\u001b[38;5;241m=\u001b[39mfcpl)\n\u001b[1;32m    240\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m mode \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mw\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m--> 241\u001b[0m     fid \u001b[38;5;241m=\u001b[39m \u001b[43mh5f\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcreate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mh5f\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mACC_TRUNC\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfapl\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfapl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfcpl\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfcpl\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    242\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m mode \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124ma\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m    243\u001b[0m     \u001b[38;5;66;03m# Open in append mode (read/write).\u001b[39;00m\n\u001b[1;32m    244\u001b[0m     \u001b[38;5;66;03m# If that fails, create a new file only if it won't clobber an\u001b[39;00m\n\u001b[1;32m    245\u001b[0m     \u001b[38;5;66;03m# existing one (ACC_EXCL)\u001b[39;00m\n\u001b[1;32m    246\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\nFile \u001b[0;32mh5py/_objects.pyx:54\u001b[0m, in \u001b[0;36mh5py._objects.with_phil.wrapper\u001b[0;34m()\u001b[0m\n\nFile \u001b[0;32mh5py/_objects.pyx:55\u001b[0m, in \u001b[0;36mh5py._objects.with_phil.wrapper\u001b[0;34m()\u001b[0m\n\nFile \u001b[0;32mh5py/h5f.pyx:122\u001b[0m, in \u001b[0;36mh5py.h5f.create\u001b[0;34m()\u001b[0m\n\n\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] Unable to synchronously create file (unable to open file: name = 'test/Fused_Reconstruction.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 602)"}],"key":"mebFDFP5by"}],"key":"usC0Gi0Kzn"}],"key":"eTonRbIgC8"},"references":{"cite":{"order":[],"data":{}}}}