{"kind":"Notebook","sha256":"ce65fc16ea9f5e93c9de728712a174c310a449a8271fa6b37e2ab19dc1b9caa4","slug":"multi-modal-tutorial-1","location":"/04_multi_modal_tutorial.ipynb","dependencies":[],"frontmatter":{"title":"Multi-Modal Tutorial Co3O4-Mn3O4","numbering":{"enumerator":{"template":"5.%s"}},"kernelspec":{"name":"python3","language":"python","display_name":"Python 3"},"jupytext":{"formats":"md:myst","text_representation":{"extension":".md","format_name":"myst"}},"authors":[{"nameParsed":{"literal":"Jason Manassa","given":"Jason","family":"Manassa"},"name":"Jason Manassa","orcid":"0000-0001-5167-5989","corresponding":true,"email":"jmanassa@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Miti Shah","given":"Miti","family":"Shah"},"name":"Miti Shah","orcid":"0000-0002-2142-7295","corresponding":false,"email":"mitis@umich.edu","affiliations":["Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Min Gee Cho","given":"Min Gee","family":"Cho"},"name":"Min Gee Cho","orcid":"0000-0003-4490-7352","corresponding":false,"email":"mgcho@lbl.gov","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Zichao Wendy Di","given":"Zichao Wendy","family":"Di"},"name":"Zichao Wendy Di","orcid":"0000-0002-4131-9363","corresponding":false,"email":"wendydi@anl.gov","affiliations":["Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Yi Jiang","given":"Yi","family":"Jiang"},"name":"Yi Jiang","orcid":"0000-0002-2807-1324","corresponding":false,"email":"yjiang@anl.gov","affiliations":["Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Jeffrey Fessler","given":"Jeffrey","family":"Fessler"},"name":"Jeffrey Fessler","orcid":"0000-0001-9998-3315","corresponding":false,"email":"fessler@umich.edu","affiliations":["Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Yu-Tsun Shao","given":"Yu-Tsun","family":"Shao"},"name":"Yu-Tsun Shao","orcid":"0000-0002-5574-0490","corresponding":false,"email":"yutsunsh@usc.edu","affiliations":["Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"],"id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Mary Scott","given":"Mary","family":"Scott"},"name":"Mary Scott","orcid":"0000-0002-9543-6725","corresponding":false,"email":"mary.scott@berkeley.edu","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Jonathan Schwartz","given":"Jonathan","family":"Schwartz"},"name":"Jonathan Schwartz","orcid":"0000-0002-8063-6951","corresponding":true,"email":"jtschwar@gmail.com","affiliations":["Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"],"id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Robert Hovden","given":"Robert","family":"Hovden"},"name":"Robert Hovden","orcid":"0000-0002-3403-8803","corresponding":true,"email":"hovden@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-9"}],"date":"2024-6-28","subject":"Tutorial","keywords":["STEM","HAADF","EELS","EDX","Fused Multi-Modal"],"affiliations":[{"id":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA","name":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA","name":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","name":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA"},{"id":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA","name":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"},{"id":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA","name":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA","name":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA","name":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"},{"id":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA","name":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"},{"id":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA","name":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"}],"abbreviations":{"DOI":"digital object identifier","FFT":"fast Fourier transform","HAADF":"high angle annular dark field","EELS":"elastic energy loss spectroscopy","EDX":"energy-dispersive x-ray spectroscopy","EDS":"energy-dispersive x-ray spectroscopy","MM":"multi-modal","TV":"total variation","GP":"gradient projection method","FGP":"fast gradient projection method","STEM":"scanning transmission electron microscopy","SNR":"signal-to-noise ratio","tif":"tag image file format"},"thumbnail":"/Figure_6_Output_2-fa1555372dfc94e5a0d87fd4affebb89.png","thumbnailOptimized":"/Figure_6_Output_2-fa1555372dfc94e5a0d87fd4affebb89.webp","exports":[{"format":"ipynb","filename":"04_multi_modal_tutorial.ipynb","url":"/04_multi_modal_tutor-b0efd82c3c37a2845eae4191a9a9990b.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Guided Computation of Fused Multi-Modal Electron Microscopy","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"roZG9wWNqe"}],"identifier":"guided-computation-of-fused-multi-modal-electron-microscopy","label":"Guided Computation of Fused Multi-Modal Electron Microscopy","html_id":"guided-computation-of-fused-multi-modal-electron-microscopy","implicit":true,"key":"JPMvPHrUsr"}],"key":"jjxUAWAOS1"},{"type":"block","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"This tutorial is almost identical to the previous, but now we use a new Co","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"QR8yOd2Gxx"},{"type":"subscript","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"3","key":"I1g1uIkmSB"}],"key":"ZwTtk1mO5N"},{"type":"text","value":"O","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"qgxjlZzbCe"},{"type":"subscript","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"4","key":"ab1lEwfunM"}],"key":"EZU0BS4A9A"},{"type":"text","value":"-Mn","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"YStRrRnxDV"},{"type":"subscript","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"3","key":"kiASSNhqWU"}],"key":"ssPknd90A2"},{"type":"text","value":"O","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"b6yqbRwEPu"},{"type":"subscript","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"4","key":"gCI6I8mK6i"}],"key":"aPc5Toa0F0"},{"type":"text","value":" dataset which utilizes ","key":"hYPYhqvnXn"},{"type":"abbreviation","title":"elastic energy loss spectroscopy","children":[{"type":"text","value":"EELS","key":"awnznUzUTT"}],"key":"Wmg47RvdCX"},{"type":"text","value":" instead of ","key":"pQIHLLJOqI"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"SO9Z1ZfcvM"}],"key":"Y1dm6eYZqP"},{"type":"text","value":". We also read from a .h5 file in a similar fashion to how one would read from a .dm3, .dm4, or .emd file format. The parameters for convergence have also changed slightly, highlighting how one set of weights may not work across datasets, hence assessing cost function convergence and regularization weighting is key. Just like the previous dataset, dramatic improvement in image quality is observed within just a few minutes of parameter tuning as seen in Figure 5.1","key":"EhUTK5uDcp"}],"key":"HXoF2nsFjk"}],"data":{"part":"Code Walkthrough"},"key":"BPUuHf0lhJ"},{"type":"block","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"container","kind":"figure","identifier":"raw vs fused co$_3$o$_4$-mn$_3$o$_4$","label":"Raw vs Fused Co$_3$O$_4$-Mn$_3$O$_4$","children":[{"type":"image","url":"/Figure_6_Output_2-fa1555372dfc94e5a0d87fd4affebb89.png","alt":"Comparison of raw input vs fused multi-modal Co_3O_4-Mn_3O_4 HAADF elastic and EDX inelastic images","width":"700px","data":{"altTextIsAutoGenerated":true},"key":"Nq0k6teB3e","urlSource":"./figs/Figure_6_Output_2.png","urlOptimized":"/Figure_6_Output_2-fa1555372dfc94e5a0d87fd4affebb89.webp"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"captionNumber","kind":"figure","label":"Raw vs Fused Co$_3$O$_4$-Mn$_3$O$_4$","identifier":"raw vs fused co$_3$o$_4$-mn$_3$o$_4$","html_id":"raw-vs-fused-co-3-o-4-mn-3-o-4","enumerator":"5.1","children":[{"type":"text","value":"Figure ","key":"t3L5TeQcVP"},{"type":"text","value":"5.1","key":"qKHjuLb39C"},{"type":"text","value":":","key":"wanse8yG0b"}],"template":"Figure %s:","key":"yYLX1isj48"},{"type":"text","value":"Comparison of raw input vs fused multi-modal Co","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"Mek22gS9U8"},{"type":"subscript","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"3","key":"UQKk3HsrL7"}],"key":"zxUlwQUbCk"},{"type":"text","value":"O","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"k98MEPv8oV"},{"type":"subscript","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"4","key":"SDKI7J57vw"}],"key":"nou8mFELUZ"},{"type":"text","value":"-Mn","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"qUgwUIZC9W"},{"type":"subscript","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"3","key":"lVpUMWI73h"}],"key":"WHF5JuqgtN"},{"type":"text","value":"O","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"GV91sy2iGc"},{"type":"subscript","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"4","key":"GgrAE42sGT"}],"key":"XZ73dgpxfi"},{"type":"text","value":" ","key":"WYhATBHla7"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"Sryk9V2Egm"}],"key":"pcNQk5YKeS"},{"type":"text","value":" elastic and ","key":"uG2y8Y3JRH"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"zyVSJWNWUl"}],"key":"JivXzfFU5m"},{"type":"text","value":" inelastic images","key":"lK70moylZJ"}],"key":"cuSvNmfLt3"}],"key":"QTGVm4HFI4"}],"enumerator":"5.1","html_id":"raw-vs-fused-co-3-o-4-mn-3-o-4","key":"KQJqi9CH9M"},{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 0: Experimental Requirements","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"SHfxLLMr1w"}],"key":"ReVe4t9nVf"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"To reconstruct using fused multi-modal electron microscopy you need to collect both elastic (e.g. ","key":"NrQpZNWhCH"},{"type":"abbreviation","title":"high angle annular dark field","children":[{"type":"text","value":"HAADF","key":"wXtROSORFi"}],"key":"HWrvH70drx"},{"type":"text","value":") and inelastic (e.g. ","key":"CKk69Khmwj"},{"type":"abbreviation","title":"elastic energy loss spectroscopy","children":[{"type":"text","value":"EELS","key":"SYeYoiPzBQ"}],"key":"Z1PRNMkYLB"},{"type":"text","value":" / ","key":"DEBWwSLR8P"},{"type":"abbreviation","title":"energy-dispersive x-ray spectroscopy","children":[{"type":"text","value":"EDX","key":"I0EBObxXW1"}],"key":"BZLsO074ga"},{"type":"text","value":") maps of your material. For the elastic signal, it is important that it provides Z-contrast of your elements. For the inelastic signal, you should have all chemistries in your sample mapped. Solving for under-determined chemical maps, or using difficult to interpret elastic signals is outside the scope of this tutorial.","key":"M7l6f4YyaT"}],"key":"JUGWp81PIB"}],"key":"xkmsvGWbRc"},{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 1","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"MbQJLg4kFm"}],"key":"dr1gIS11k9"},{"type":"paragraph","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Python Imports","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"aXxs4yYGes"}],"key":"QtF6RuAaOl"}],"key":"o1joASjHCl"}],"key":"Zib3OCG0hM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import data.fusion_utils as utils\n\nfrom scipy.sparse import spdiags\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm \nimport numpy as np\nimport h5py","key":"JyPQsA9RbG"},{"type":"output","id":"edRuthS9bhqJxN1_Imxnp","data":[],"key":"xji2nd7CCl"}],"key":"hF99ihQyrG"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dzfRyBhZFh"}],"key":"ptgExpRgLw"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"For this example, the dataset is stored in a .h5 file so this is how you can extract data and then save it numpy arrays for the fused multi-modal workflow.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"n5XpZev0Q3"}],"key":"ME5gW2usOZ"}],"key":"nzQsM2SkL1"}],"key":"HdQFAC3Dii"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"data = 'data/Co3O4_Mn3O4.h5'\n\n# Define element names and their atomic weights\nelem_names=['Co', 'Mn', 'O']\nelem_weights=[27,25,8]\n# Parse elastic HAADF data and inelastic chemical maps based on element index from line above\nwith h5py.File(data, 'r') as h5_file:\n    HAADF = np.array(h5_file['HAADF'])\nxx = np.array([],dtype=np.float32)\nfor ee in elem_names:\n\t# Read chemical maps\n    with h5py.File(data, 'r') as h5_file:\n        chemMap = np.array(h5_file[ee])\n        \n  # Check if chemMap has the same dimensions as HAADF\n    if chemMap.shape != HAADF.shape:\n        raise ValueError(f\"The dimensions of {ee} chemical map do not match HAADF dimensions.\")\n    # Set Noise Floor to Zero and Normalize Chemical Maps\n    chemMap -= np.min(chemMap); chemMap /= np.max(chemMap)\n    # Concatenate Chemical Map to Variable of Interest\n    xx = np.concatenate([xx,chemMap.flatten()])","key":"Vc6rIp2bnq"},{"type":"output","id":"l-6Xx12iTKvEzchAsVhWt","data":[],"key":"uycllRcyOk"}],"key":"qF3yHJBzpZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 3","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iHT3T4xrdU"}],"key":"Rx5uCBME1I"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Reshape your data","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OezwZtAu1Y"}],"key":"Yopz0SiybK"}],"key":"EU5JfIEEMV"},{"type":"admonition","kind":"danger","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Caution!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qLbX2U0xKI"}],"key":"ZmPJuzjnmz"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Do not change the code below.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"R2SzMA9Mid"}],"key":"Y4CZ6Nda6R"}],"key":"iGpQImONnG"}],"key":"hkAYo3Wxmi"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Make Copy of Raw Measurements for Poisson Maximum Likelihood Term \nxx0 = xx.copy()\n\n# Incoherent linear imaging for elastic scattering scales with atomic number Z raised to γ  ∈ [1.4, 2]\ngamma = 1.6 \n\n# Image Dimensions\n(nx, ny) = chemMap.shape; nPix = nx * ny\nnz = len(elem_names)\n\n# C++ TV Min Regularizers\nreg = utils.tvlib(nx,ny)\n\n# Data Subtraction and Normalization \nHAADF -= np.min(HAADF); HAADF /= np.max(HAADF)\nHAADF=HAADF.flatten()\n\n# Create Summation Matrix\nA = utils.create_weighted_measurement_matrix(nx,ny,nz,elem_weights,gamma,1)","key":"mbBKyLMejn"},{"type":"output","id":"zQurGuj5yUd7EUkXCxpvO","data":[],"key":"boIzALXGhU"}],"key":"p3r2sG3lwF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","class":"tip ","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Optional","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cP0KndP9Wl"}],"key":"VwjgKPZg4f"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Plot your raw elastic/inelastic data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"r9CHRNkz4O"}],"key":"xjLxdtZyl1"}],"key":"YzK3vEzS34"}],"key":"ywdyyYfOum"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(1, nz + 1, figsize=(15, 8))  # Updated to accommodate an additional subplot for HAADF\nax = ax.flatten()\n\nfor ii in range(nz):\n    ax[ii].imshow(xx0[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx, ny), cmap='gray', vmax=0.3)\n    ax[ii].set_title(elem_names[ii])\n    ax[ii].axis('off')\n\nax[nz].imshow(HAADF.reshape(nx, ny), cmap='gray')\nax[nz].set_title('HAADF')\nax[nz].axis('off')\n\nplt.show()","key":"yFL61NB7dn"},{"type":"output","id":"C8WxBSNeRhXSiu-536_QL","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7a410b750fbb47c0bf5403715056df2b","path":"/7a410b750fbb47c0bf5403715056df2b.png"},"text/plain":{"content":"<Figure size 1500x800 with 4 Axes>","content_type":"text/plain"}}}],"key":"oA3V5okj3F"}],"key":"YSHD4Gkj41"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 4","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I1SvP5HXlp"}],"key":"ZKjb0Tm5fb"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Fine tune your weights for each of the three parts of the cost function.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IM6bDivcXE"}],"key":"Sna3ET8cQM"}],"key":"mdQsRCrHLa"}],"key":"Hmpa61S9Cd"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Convergence Parameters\nlambdaHAADF = 1/nz # Do not modify this\nlambdaChem = 1e-3\nnIter = 30 # Typically 10-15 will suffice\nlambdaTV = 0.006; #Typically between 0.001 and 1\nbkg = 1e-8\n\n# FGP TV Parameters\nregularize = True; nIter_TV = 5; ","key":"zCmO5kVg0Z"},{"type":"output","id":"qEbHELr42Sh0EuDG9wirj","data":[],"key":"HBbRgGoieU"}],"key":"wehvF9Rety"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 5","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zMK95toHHk"}],"key":"sxCoR0sjRi"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Run the Fused Multi-Modal algorithm. Here an extra line was added to subtract off some of the constant background noise.  This can be helpful when inelastic maps are exceptionally noisy.  The ideal value to background subtract off was found by looking at the mean value of the image found in regions of the image where clear material structure was not present","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HKaoU0Z1EW"}],"key":"eWOLkc78FO"}],"key":"S9nxLdWALS"},{"type":"admonition","kind":"danger","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Caution!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HW2gRM1Ygi"}],"key":"gHJimREBTx"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Do not change the code below.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KSmsRGO8dx"}],"key":"QuukhwXGsa"}],"key":"am0OQ2SuBU"}],"key":"ZJULpzSieO"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# xx represents the flattened 1D elastic maps we are trying to improve via the cost function\nxx = xx0.copy()\n\n# Background noise subtraction for improved convergence\nxx = np.where((xx < .2), 0, xx)\n\n# Auxiliary Functions for measuring the cost functions\nlsqFun = lambda inData : 0.5 * np.linalg.norm(A.dot(inData**gamma) - HAADF) **2\npoissonFun = lambda inData : np.sum(xx0 * np.log(inData + 1e-8) - inData)\n\n# Main Loop\n\n# Initialize the three cost functions components \ncostHAADF = np.zeros(nIter,dtype=np.float32); costChem = np.zeros(nIter, dtype=np.float32); costTV = np.zeros(nIter, dtype=np.float32);\n\nfor kk in tqdm(range(nIter)):\n\t# Solve for the first two optimization functions $\\Psi_1$ and $\\Psi_2$\n\txx -=  gamma * spdiags(xx**(gamma - 1), [0], nz*nx*ny, nz*nx*ny) * lambdaHAADF * A.transpose() * (A.dot(xx**gamma) - HAADF) + lambdaChem * (1 - xx0 / (xx + bkg))\n\n\t# Enforce positivity constraint\n\txx[xx<0] = 0\n\n\t# FGP Regularization if turned on\n\tif regularize:\n\t\tfor zz in range(nz):\n\t\t\txx[zz*nPix:(zz+1)*nPix] = reg.fgp_tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny), lambdaTV, nIter_TV).flatten()\n\n\t\t\t# Measure TV Cost Function\n\t\t\tcostTV[kk] += reg.tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny) )\n\t\t\t\n\t# Measure $\\Psi_1$ and $\\Psi_2$ Cost Functions\n\tcostHAADF[kk] = lsqFun(xx); costChem[kk] = poissonFun(xx)","key":"c9EfdoEPGx"},{"type":"output","id":"yYnQsjPkj7bPhl4wB60BD","data":[{"name":"stderr","output_type":"stream","text":"100%|███████████████████████████████████████████████████████████████████████████| 30/30 [00:01<00:00, 22.21it/s]\n"}],"key":"FZiVXQ8zYQ"}],"key":"nwKthDSJrf"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 6","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CW8kuS3s3q"}],"key":"ozUs2dwVWk"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Assess convergence by confirming that all 3 cost functions asymptotically approach a low value.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CWLrqqbQ3r"}],"key":"tGMaYyU0N6"}],"key":"DoYlDm5x5A"},{"type":"admonition","class":"attention","children":[{"type":"paragraph","children":[{"type":"text","value":"Be careful with ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"fO8CVto6v2"},{"type":"inlineMath","value":"\\lambda_{TV}","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>λ</mi><mrow><mi>T</mi><mi>V</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\lambda_{TV}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>","key":"tXgCpqyir2"},{"type":"text","value":"!","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XxPpx0w50q"}],"key":"BsL3iYiNuD"}],"key":"I7OAqWXq2u"}],"key":"OmUrtQ3UGJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Display Cost Functions and Descent Parameters\nutils.plot_convergence(costHAADF, lambdaHAADF, costChem, lambdaChem, costTV, lambdaTV)\n# Show Reconstructed Signal\nfig, ax = plt.subplots(2, len(elem_names), figsize=(12, 8))\nax = ax.flatten()\n\nfor ii in range(len(elem_names)):\n    ax[ii].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx, ny), cmap='gray')\n    ax[ii].set_title(elem_names[ii])\n    ax[ii].axis('off')\n    \n    ax[ii + len(elem_names)].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx, ny)[40:100, 50:110], cmap='gray')\n    ax[ii + len(elem_names)].set_title(elem_names[ii] + ' Cropped')\n    ax[ii + len(elem_names)].axis('off')\n\nplt.show()","key":"MhhJHT6uNk"},{"type":"output","id":"Et0Jubw7GFIrp4undJiwU","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1fe9b6b52c5b1a66aaa36100c2c18589","path":"/1fe9b6b52c5b1a66aaa36100c2c18589.png"},"text/plain":{"content":"<Figure size 1200x600 with 3 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"bc50ead73a54bb398df2e6868eec74e4","path":"/bc50ead73a54bb398df2e6868eec74e4.png"},"text/plain":{"content":"<Figure size 1200x800 with 6 Axes>","content_type":"text/plain"}}}],"key":"fJyQqTwW5z"}],"key":"WBrL1KJu5c"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Step 7","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RJRjznAkpz"}],"key":"hE8tX4lQhv"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Save your data","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NIkBLNaNBH"}],"key":"vTBnit96ji"}],"key":"C25sx5I2yX"}],"key":"HYoXesFf8g"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"save_folder_name='test'\nutils.save_data(save_folder_name, xx0, xx, HAADF, A.dot(xx**gamma), elem_names, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)","key":"oGXeu0Ex5L"},{"type":"output","id":"TNpgW1GBEfaZ_EgcwCoZU","data":[{"ename":"FileNotFoundError","evalue":"[Errno 2] Unable to synchronously create file (unable to open file: name = 'test/Fused_Reconstruction.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 602)","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)\nCell \u001b[0;32mIn[32], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m save_folder_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtest\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m----> 2\u001b[0m \u001b[43mutils\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msave_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43msave_folder_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxx0\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mA\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdot\u001b[49m\u001b[43m(\u001b[49m\u001b[43mxx\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mgamma\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43melem_names\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mny\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostChem\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostTV\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaChem\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaTV\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgamma\u001b[49m\u001b[43m)\u001b[49m\n\nFile \u001b[0;32m~/Desktop/PhD/Projects/20240312_2D_tutorial/data/fusion_utils.py:9\u001b[0m, in \u001b[0;36msave_data\u001b[0;34m(folder_name, chem_original, chem_fused, haadf_original, haadf_fused, eList, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21msave_data\u001b[39m(folder_name, chem_original, chem_fused, haadf_original, haadf_fused, eList, nx, ny,costHAADF,costChem,costTV,lambdaHAADF,lambdaChem,lambdaTV,gamma):\n\u001b[0;32m----> 9\u001b[0m     file \u001b[38;5;241m=\u001b[39m \u001b[43mh5py\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mFile\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfolder_name\u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m/Fused_Reconstruction.h5\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mw\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m     10\u001b[0m     file\u001b[38;5;241m.\u001b[39mcreate_dataset(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mraw_haadf\u001b[39m\u001b[38;5;124m'\u001b[39m, data\u001b[38;5;241m=\u001b[39mhaadf_original)\n\u001b[1;32m     11\u001b[0m     file\u001b[38;5;241m.\u001b[39mcreate_dataset(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfused_haadf\u001b[39m\u001b[38;5;124m'\u001b[39m, data\u001b[38;5;241m=\u001b[39mhaadf_fused)\n\nFile \u001b[0;32m~/miniforge3/envs/fusion/lib/python3.12/site-packages/h5py/_hl/files.py:562\u001b[0m, in \u001b[0;36mFile.__init__\u001b[0;34m(self, name, mode, driver, libver, userblock_size, swmr, rdcc_nslots, rdcc_nbytes, rdcc_w0, track_order, fs_strategy, fs_persist, fs_threshold, fs_page_size, page_buf_size, min_meta_keep, min_raw_keep, locking, alignment_threshold, alignment_interval, meta_block_size, **kwds)\u001b[0m\n\u001b[1;32m    553\u001b[0m     fapl \u001b[38;5;241m=\u001b[39m make_fapl(driver, libver, rdcc_nslots, rdcc_nbytes, rdcc_w0,\n\u001b[1;32m    554\u001b[0m                      locking, page_buf_size, min_meta_keep, min_raw_keep,\n\u001b[1;32m    555\u001b[0m                      alignment_threshold\u001b[38;5;241m=\u001b[39malignment_threshold,\n\u001b[1;32m    556\u001b[0m                      alignment_interval\u001b[38;5;241m=\u001b[39malignment_interval,\n\u001b[1;32m    557\u001b[0m                      meta_block_size\u001b[38;5;241m=\u001b[39mmeta_block_size,\n\u001b[1;32m    558\u001b[0m                      \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[1;32m    559\u001b[0m     fcpl \u001b[38;5;241m=\u001b[39m make_fcpl(track_order\u001b[38;5;241m=\u001b[39mtrack_order, fs_strategy\u001b[38;5;241m=\u001b[39mfs_strategy,\n\u001b[1;32m    560\u001b[0m                      fs_persist\u001b[38;5;241m=\u001b[39mfs_persist, fs_threshold\u001b[38;5;241m=\u001b[39mfs_threshold,\n\u001b[1;32m    561\u001b[0m                      fs_page_size\u001b[38;5;241m=\u001b[39mfs_page_size)\n\u001b[0;32m--> 562\u001b[0m     fid \u001b[38;5;241m=\u001b[39m \u001b[43mmake_fid\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muserblock_size\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfapl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfcpl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mswmr\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mswmr\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    564\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(libver, \u001b[38;5;28mtuple\u001b[39m):\n\u001b[1;32m    565\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_libver \u001b[38;5;241m=\u001b[39m libver\n\nFile \u001b[0;32m~/miniforge3/envs/fusion/lib/python3.12/site-packages/h5py/_hl/files.py:241\u001b[0m, in \u001b[0;36mmake_fid\u001b[0;34m(name, mode, userblock_size, fapl, fcpl, swmr)\u001b[0m\n\u001b[1;32m    239\u001b[0m     fid \u001b[38;5;241m=\u001b[39m h5f\u001b[38;5;241m.\u001b[39mcreate(name, h5f\u001b[38;5;241m.\u001b[39mACC_EXCL, fapl\u001b[38;5;241m=\u001b[39mfapl, fcpl\u001b[38;5;241m=\u001b[39mfcpl)\n\u001b[1;32m    240\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m mode \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mw\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m--> 241\u001b[0m     fid \u001b[38;5;241m=\u001b[39m \u001b[43mh5f\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcreate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mh5f\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mACC_TRUNC\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfapl\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfapl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfcpl\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfcpl\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    242\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m mode \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124ma\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m    243\u001b[0m     \u001b[38;5;66;03m# Open in append mode (read/write).\u001b[39;00m\n\u001b[1;32m    244\u001b[0m     \u001b[38;5;66;03m# If that fails, create a new file only if it won't clobber an\u001b[39;00m\n\u001b[1;32m    245\u001b[0m     \u001b[38;5;66;03m# existing one (ACC_EXCL)\u001b[39;00m\n\u001b[1;32m    246\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\nFile \u001b[0;32mh5py/_objects.pyx:54\u001b[0m, in \u001b[0;36mh5py._objects.with_phil.wrapper\u001b[0;34m()\u001b[0m\n\nFile \u001b[0;32mh5py/_objects.pyx:55\u001b[0m, in \u001b[0;36mh5py._objects.with_phil.wrapper\u001b[0;34m()\u001b[0m\n\nFile \u001b[0;32mh5py/h5f.pyx:122\u001b[0m, in \u001b[0;36mh5py.h5f.create\u001b[0;34m()\u001b[0m\n\n\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] Unable to synchronously create file (unable to open file: name = 'test/Fused_Reconstruction.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 602)"}],"key":"QDRUIAjAXb"}],"key":"DttxCpqKCs"}],"key":"gSNy1p3kkp"},"references":{"cite":{"order":[],"data":{}}}}