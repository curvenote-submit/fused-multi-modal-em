{"kind":"Notebook","sha256":"4d28f7c58da96422843a81fd7eafe5f167e1d4b04f655ddc38e2faa5ea9ecd9a","slug":"tutorial-1","location":"/notebooks/tutorial_1.ipynb","dependencies":[],"frontmatter":{"authors":[{"nameParsed":{"literal":"Jason Manassa","given":"Jason","family":"Manassa"},"name":"Jason Manassa","orcid":"0000-0001-5167-5989","corresponding":true,"email":"jmanassa@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Miti Shah","given":"Miti","family":"Shah"},"name":"Miti Shah","orcid":"0000-0002-2142-7295","corresponding":false,"email":"mitis@umich.edu","affiliations":["Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Min Gee Cho","given":"Min Gee","family":"Cho"},"name":"Min Gee Cho","orcid":"0000-0003-4490-7352","corresponding":false,"email":"mgcho@lbl.gov","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Zichao Wendy Di","given":"Zichao Wendy","family":"Di"},"name":"Zichao Wendy Di","orcid":"0000-0002-4131-9363","corresponding":false,"email":"wendydi@anl.gov","affiliations":["Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Yi Jiang","given":"Yi","family":"Jiang"},"name":"Yi Jiang","orcid":"0000-0002-2807-1324","corresponding":false,"email":"yjiang@anl.gov","affiliations":["Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Jeffrey Fessler","given":"Jeffrey","family":"Fessler"},"name":"Jeffrey Fessler","orcid":"0000-0001-9998-3315","corresponding":false,"email":"fessler@umich.edu","affiliations":["Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Yu-Tsun Shao","given":"Yu-Tsun","family":"Shao"},"name":"Yu-Tsun Shao","orcid":"0000-0002-5574-0490","corresponding":false,"email":"yutsunsh@usc.edu","affiliations":["Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"],"id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Mary Scott","given":"Mary","family":"Scott"},"name":"Mary Scott","orcid":"0000-0002-9543-6725","corresponding":false,"email":"mary.scott@berkeley.edu","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Jonathan Schwartz","given":"Jonathan","family":"Schwartz"},"name":"Jonathan Schwartz","orcid":"0000-0002-8063-6951","corresponding":true,"email":"jtschwar@gmail.com","affiliations":["Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"],"id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Robert Hovden","given":"Robert","family":"Hovden"},"name":"Robert Hovden","orcid":"0000-0002-3403-8803","corresponding":true,"email":"hovden@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-9"}],"date":"2024-6-28","subject":"Tutorial","keywords":["STEM","HAADF","EELS","EDX","Fused Multi-Modal"],"affiliations":[{"id":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA","name":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA","name":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","name":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA"},{"id":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA","name":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"},{"id":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA","name":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA","name":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA","name":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"},{"id":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA","name":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"},{"id":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA","name":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"}],"abbreviations":{"DOI":"digital object identifier","FFT":"fast Fourier transform","HAADF":"high angle annular dark field","EELS":"elastic energy loss spectroscopy","EDX":"energy-dispersive x-ray spectroscopy","EDS":"energy-dispersive x-ray spectroscopy","MM":"multi-modal","TV":"total variation","GP":"gradient projection method","FGP":"fast gradient projection method","STEM":"scanning transmission electron microscopy","SNR":"signal-to-noise ratio","tif":"tag image file format"},"exports":[{"format":"ipynb","filename":"tutorial_1.ipynb","url":"/tutorial_1-6678bb07aa0f1897fe3f478e36c4852a.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import ../data/fusion_utils as utils\n\nfrom scipy.sparse import spdiags\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm \nimport numpy as np","identifier":"app:step1-code","enumerator":"1","html_id":"app-step1-code","key":"yi4YNnxWDx"},{"type":"output","id":"S6bEv0_2T41GluT9Pztvb","data":[],"identifier":"app:step1-output","html_id":"app-step1-output","key":"uFe0U4AJBh"}],"identifier":"app:step1","label":"app:step1","html_id":"app-step1","key":"HpyiQjLYEk"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"data = np.load('data/PTO_Trilayer_dataset.npz')\n# Define element names and their atomic weights\nelem_names=['Sc', 'Dy', 'O']\nelem_weights=[21,66,8]\n# Parse elastic HAADF data and inelastic chemical maps based on element index from line above\nHAADF = data['HAADF']\nxx = np.array([],dtype=np.float32)\nfor ee in elem_names:\n\n\t# Read Chemical Map for Element \"ee\"\n\tchemMap = data[ee]\n\n    # Check if chemMap has the same dimensions as HAADF\n\tif chemMap.shape != HAADF.shape:\n\t\traise ValueError(f\"The dimensions of {ee} chemical map do not match HAADF dimensions.\")\n\t\n\t# Set Noise Floor to Zero and Normalize Chemical Maps\n\tchemMap -= np.min(chemMap); chemMap /= np.max(chemMap)\n\n\t# Concatenate Chemical Map to Variable of Interest\n\txx = np.concatenate([xx,chemMap.flatten()])","identifier":"app:step2-code","enumerator":"2","html_id":"app-step2-code","key":"MNNxlKAViB"},{"type":"output","id":"97SqnPSEURT2NApzoO6Pp","data":[],"identifier":"app:step2-output","html_id":"app-step2-output","key":"PreGEIDo70"}],"identifier":"app:step2","label":"app:step2","html_id":"app-step2","key":"R4o0zfujk7"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Make Copy of Raw Measurements for Poisson Maximum Likelihood Term \nxx0 = xx.copy()\n\n# Incoherent linear imaging for elastic scattering scales with atomic number Z raised to γ  ∈ [1.4, 2]\ngamma = 1.6 \n\n# Image Dimensions\n(nx, ny) = chemMap.shape; nPix = nx * ny\nnz = len(elem_names)\n\n# C++ TV Min Regularizers\nreg = utils.tvlib(nx,ny)\n\n# Data Subtraction and Normalization \nHAADF -= np.min(HAADF); HAADF /= np.max(HAADF)\nHAADF=HAADF.flatten()\n\n# Create Summation Matrix\nA = utils.create_weighted_measurement_matrix(nx,ny,nz,elem_weights,gamma,1)","identifier":"app:step31-code","enumerator":"3","html_id":"app-step31-code","key":"sAnTHVJUaL"},{"type":"output","id":"kWVdB2_EtUugoP1oOrypS","data":[],"identifier":"app:step31-output","html_id":"app-step31-output","key":"jKTdO1DcH3"}],"identifier":"app:step31","label":"app:step31","html_id":"app-step31","key":"stCYpZlbpH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(2,len(elem_names)+1,figsize=(12,8))\nax = ax.flatten()\nax[0].imshow(HAADF.reshape(nx,ny),cmap='gray'); ax[0].set_title('HAADF'); ax[0].axis('off')\nax[1+len(elem_names)].imshow(HAADF.reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[1+len(elem_names)].set_title('HAADF Cropped'); ax[1+len(elem_names)].axis('off')\n\nfor ii in range(len(elem_names)):\n    ax[ii+1].imshow(xx0[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny),cmap='gray'); ax[ii+1].set_title(elem_names[ii]); ax[ii+1].axis('off')\n    ax[ii+2+len(elem_names)].imshow(xx0[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[ii+2+len(elem_names)].set_title(elem_names[ii]+' Cropped'); ax[ii+2+len(elem_names)].axis('off')\nplt.show()","identifier":"app:step32-code","enumerator":"4","html_id":"app-step32-code","key":"ZJqKmY831V"},{"type":"output","id":"Dx8u4WkRonYOgwt4IZJe0","data":[],"identifier":"app:step32-output","html_id":"app-step32-output","key":"YG6qpTyKCr"}],"identifier":"app:step32","label":"app:step32","html_id":"app-step32","key":"n7gjqlsd1N"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Convergence Parameters\nlambdaHAADF = 1/nz # Do not modify this\nlambdaChem = 0.08\nlambdaTV = 0.15; #Typically between 0.001 and 1\nnIter = 30 # Typically 10-15 will suffice\nbkg = 2.4e-1\n\n# FGP TV Parameters\nregularize = True; nIter_TV = 3; ","identifier":"app:step4-code","enumerator":"5","html_id":"app-step4-code","key":"A4LmBcYcSK"},{"type":"output","id":"vZXDawIl9p_zKrwVktJzx","data":[],"identifier":"app:step4-output","html_id":"app-step4-output","key":"qtQ1KL5wjt"}],"identifier":"app:step4","label":"app:step4","html_id":"app-step4","key":"eSaGNhTXhP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# xx represents the flattened 1D elastic maps we are trying to improve via the cost function\nxx = xx0.copy()\n\n# Auxiliary Functions for measuring the cost functions\nlsqFun = lambda inData : 0.5 * np.linalg.norm(A.dot(inData**gamma) - HAADF) **2\npoissonFun = lambda inData : np.sum(xx0 * np.log(inData + 1e-8) - inData)\n\n# Main Loop\n\n# Initialize the three cost functions components \ncostHAADF = np.zeros(nIter,dtype=np.float32); costChem = np.zeros(nIter, dtype=np.float32); costTV = np.zeros(nIter, dtype=np.float32);\n\nfor kk in tqdm(range(nIter)):\n\t# Solve for the first two optimization functions $\\Psi_1$ and $\\Psi_2$\n\txx -=  gamma * spdiags(xx**(gamma - 1), [0], nz*nx*ny, nz*nx*ny) * lambdaHAADF * A.transpose() * (A.dot(xx**gamma) - HAADF) + lambdaChem * (1 - xx0 / (xx + bkg))\n\n\t# Enforce positivity constraint\n\txx[xx<0] = 0\n\n\t# FGP Regularization if turned on\n\tif regularize:\n\t\tfor zz in range(nz):\n\t\t\txx[zz*nPix:(zz+1)*nPix] = reg.fgp_tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny), lambdaTV, nIter_TV).flatten()\n\n\t\t\t# Measure TV Cost Function\n\t\t\tcostTV[kk] += reg.tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny) )\n\t\t\t\n\t# Measure $\\Psi_1$ and $\\Psi_2$ Cost Functions\n\tcostHAADF[kk] = lsqFun(xx); costChem[kk] = poissonFun(xx)","identifier":"app:step5-code","enumerator":"6","html_id":"app-step5-code","key":"T3VwmXwcBS"},{"type":"output","id":"zlFdked_sciaIA_E0-xSd","data":[],"identifier":"app:step5-output","html_id":"app-step5-output","key":"XkrP206GhH"}],"identifier":"app:step5","label":"app:step5","html_id":"app-step5","key":"x7QSZNEaD5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Display Cost Functions and Descent Parameters\nutils.plot_convergence(costHAADF, lambdaHAADF, costChem, lambdaChem, costTV, lambdaTV)\n# Show Reconstructed Signal\nfig, ax = plt.subplots(2,len(elem_names)+1,figsize=(12,8))\nax = ax.flatten()\nax[0].imshow((A.dot(xx**gamma)).reshape(nx,ny),cmap='gray'); ax[0].set_title('HAADF'); ax[0].axis('off')\nax[1+len(elem_names)].imshow((A.dot(xx**gamma)).reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[1+len(elem_names)].set_title('HAADF Cropped'); ax[1+len(elem_names)].axis('off')\n\nfor ii in range(len(elem_names)):\n    ax[ii+1].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny),cmap='gray'); ax[ii+1].set_title(elem_names[ii]); ax[ii+1].axis('off')\n    ax[ii+2+len(elem_names)].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx,ny)[70:130,25:85],cmap='gray'); ax[ii+2+len(elem_names)].set_title(elem_names[ii]+' Cropped'); ax[ii+2+len(elem_names)].axis('off')\nplt.show()","identifier":"app:step6-code","enumerator":"7","html_id":"app-step6-code","key":"ETj6xhoj9J"},{"type":"output","id":"TS5WDxfi71wGSkfGhlV81","data":[],"identifier":"app:step6-output","html_id":"app-step6-output","key":"LL0lPGuEhJ"}],"identifier":"app:step6","label":"app:step6","html_id":"app-step6","key":"BCZD4AiWv6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"save_folder_name='test'\nutils.save_data(save_folder_name, xx0, xx, HAADF, A.dot(xx**gamma), elem_names, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)","identifier":"app:step7-code","enumerator":"8","html_id":"app-step7-code","key":"unvb3fBP7S"},{"type":"output","id":"N9b7f1H0OngmhNiyZubc6","data":[],"identifier":"app:step7-output","html_id":"app-step7-output","key":"vhzNpbeU4l"}],"identifier":"app:step7","label":"app:step7","html_id":"app-step7","key":"RZzX6q9Hgg"}],"key":"EXgEd3IFkI"},"references":{"cite":{"order":[],"data":{}}}}