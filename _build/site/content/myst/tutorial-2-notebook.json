{"kind":"Notebook","sha256":"3ff6dda4e05edd3b10842ef5537042b0c37b3153aa08902c7a7ea2663dcc7070","slug":"tutorial-2-notebook","location":"/notebooks/tutorial_2_notebook.ipynb","dependencies":[],"frontmatter":{"kernelspec":{"name":"python3","language":"python","display_name":"Python 3 (ipykernel)"},"authors":[{"nameParsed":{"literal":"Jason Manassa","given":"Jason","family":"Manassa"},"name":"Jason Manassa","orcid":"0000-0001-5167-5989","corresponding":true,"email":"jmanassa@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Miti Shah","given":"Miti","family":"Shah"},"name":"Miti Shah","orcid":"0000-0002-2142-7295","corresponding":false,"email":"mitis@umich.edu","affiliations":["Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Min Gee Cho","given":"Min Gee","family":"Cho"},"name":"Min Gee Cho","orcid":"0000-0003-4490-7352","corresponding":false,"email":"mgcho@lbl.gov","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Zichao Wendy Di","given":"Zichao Wendy","family":"Di"},"name":"Zichao Wendy Di","orcid":"0000-0002-4131-9363","corresponding":false,"email":"wendydi@anl.gov","affiliations":["Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Yi Jiang","given":"Yi","family":"Jiang"},"name":"Yi Jiang","orcid":"0000-0002-2807-1324","corresponding":false,"email":"yjiang@anl.gov","affiliations":["Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"],"id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Jeffrey Fessler","given":"Jeffrey","family":"Fessler"},"name":"Jeffrey Fessler","orcid":"0000-0001-9998-3315","corresponding":false,"email":"fessler@umich.edu","affiliations":["Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Yu-Tsun Shao","given":"Yu-Tsun","family":"Shao"},"name":"Yu-Tsun Shao","orcid":"0000-0002-5574-0490","corresponding":false,"email":"yutsunsh@usc.edu","affiliations":["Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"],"id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Mary Scott","given":"Mary","family":"Scott"},"name":"Mary Scott","orcid":"0000-0002-9543-6725","corresponding":false,"email":"mary.scott@berkeley.edu","affiliations":["Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"],"id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Jonathan Schwartz","given":"Jonathan","family":"Schwartz"},"name":"Jonathan Schwartz","orcid":"0000-0002-8063-6951","corresponding":true,"email":"jtschwar@gmail.com","affiliations":["Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"],"id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Robert Hovden","given":"Robert","family":"Hovden"},"name":"Robert Hovden","orcid":"0000-0002-3403-8803","corresponding":true,"email":"hovden@umich.edu","affiliations":["Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"],"id":"contributors-myst-generated-uid-9"}],"date":"2024-6-28","subject":"Tutorial","keywords":["STEM","HAADF","EELS","EDX","Fused Multi-Modal"],"affiliations":[{"id":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA","name":"Department of Materials Science and Engineering, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA","name":"Department of Nuclear Engineering and Radiological Sciences, University of Michigan, Ann Arbor, MI, USA"},{"id":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA","name":"Department of Materials Science and Engineering, University of California at Berkeley, Berkeley, CA, USA"},{"id":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA","name":"National Center for Electron Microscopy, Molecular Foundry, Lawrence Berkeley National Laboratory, Berkeley, CA, USA"},{"id":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA","name":"Mathematics and Computer Science Division, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA","name":"Advanced Photon Source Facility, Argonne National Laboratory, Lemont, IL, USA"},{"id":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA","name":"Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"},{"id":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA","name":"Mork Family Department of Chemical Engineering and Materials Science, University of Southern California, Los Angeles, California, USA"},{"id":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA","name":"Chan Zuckerberg Imaging Institute, 3400 Bridge Parkway, Redwood City, CA 94065, USA"}],"abbreviations":{"DOI":"digital object identifier","FFT":"fast Fourier transform","HAADF":"high angle annular dark field","EELS":"elastic energy loss spectroscopy","EDX":"energy-dispersive x-ray spectroscopy","EDS":"energy-dispersive x-ray spectroscopy","MM":"multi-modal","TV":"total variation","GP":"gradient projection method","FGP":"fast gradient projection method","STEM":"scanning transmission electron microscopy","SNR":"signal-to-noise ratio","tif":"tag image file format"},"exports":[{"format":"ipynb","filename":"tutorial_2_notebook.ipynb","url":"/tutorial_2_notebook-61d33b0d9ea48b2c5f8aa8e888e69457.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import data.fusion_utils as utils\n\nimport h5py\nfrom scipy.sparse import spdiags\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm \nimport numpy as np","key":"SD2CWroOFp"},{"type":"output","id":"jpjfw9fsWOvRO5LTkfVjU","data":[],"key":"qunyhRa2gY"}],"key":"MC9ppYKqy3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"data = 'data/Co3O4_Mn3O4.h5'\n\n# Define element names and their atomic weights\nelem_names=['Co', 'Mn', 'O']\nelem_weights=[27,25,8]\n# Parse elastic HAADF data and inelastic chemical maps based on element index from line above\nwith h5py.File(data, 'r') as h5_file:\n    HAADF = np.array(h5_file['HAADF'])\nxx = np.array([],dtype=np.float32)\nfor ee in elem_names:\n\t# Read chemical maps\n    with h5py.File(data, 'r') as h5_file:\n        chemMap = np.array(h5_file[ee])\n        \n  # Check if chemMap has the same dimensions as HAADF\n    if chemMap.shape != HAADF.shape:\n        raise ValueError(f\"The dimensions of {ee} chemical map do not match HAADF dimensions.\")\n    # Set Noise Floor to Zero and Normalize Chemical Maps\n    chemMap -= np.min(chemMap); chemMap /= np.max(chemMap)\n    # Concatenate Chemical Map to Variable of Interest\n    xx = np.concatenate([xx,chemMap.flatten()])","key":"HfQUJSb1wr"},{"type":"output","id":"73RV-Py6ftYODQwsAHAfS","data":[],"key":"bVt5jm14nG"}],"key":"nF8RgHhrOL"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Make Copy of Raw Measurements for Poisson Maximum Likelihood Term \nxx0 = xx.copy()\n\n# Incoherent linear imaging for elastic scattering scales with atomic number Z raised to γ  ∈ [1.4, 2]\ngamma = 1.6 \n\n# Image Dimensions\n(nx, ny) = chemMap.shape; nPix = nx * ny\nnz = len(elem_names)\n\n# C++ TV Min Regularizers\nreg = utils.tvlib(nx,ny)\n\n# Data Subtraction and Normalization \nHAADF -= np.min(HAADF); HAADF /= np.max(HAADF)\nHAADF=HAADF.flatten()\n\n# Create Summation Matrix\nA = utils.create_weighted_measurement_matrix(nx,ny,nz,elem_weights,gamma,1)","key":"HWti2u2X3J"},{"type":"output","id":"4Lo2c40UaCA_e9LOpk32P","data":[],"key":"IP00liukAV"}],"key":"xDHS1WDR1t"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(1, nz + 1, figsize=(15, 8))  # Updated to accommodate an additional subplot for HAADF\nax = ax.flatten()\n\nfor ii in range(nz):\n    ax[ii].imshow(xx0[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx, ny), cmap='gray', vmax=0.3)\n    ax[ii].set_title(elem_names[ii])\n    ax[ii].axis('off')\n\nax[nz].imshow(HAADF.reshape(nx, ny), cmap='gray')\nax[nz].set_title('HAADF')\nax[nz].axis('off')\n\nplt.show()","key":"Iy6yJ8cbbG"},{"type":"output","id":"guBeOxuGjeANK_XQumQc-","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7a410b750fbb47c0bf5403715056df2b","path":"/7a410b750fbb47c0bf5403715056df2b.png"},"text/plain":{"content":"<Figure size 1500x800 with 4 Axes>","content_type":"text/plain"}}}],"key":"GrU4GtIHH1"}],"key":"K5Q7XTHdRH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Convergence Parameters\nlambdaHAADF = 1/nz # Do not modify this\nlambdaChem = 1e-3\nnIter = 30 # Typically 10-15 will suffice\nlambdaTV = 0.006; #Typically between 0.001 and 1\nbkg = 1e-8\n\n# FGP TV Parameters\nregularize = True; nIter_TV = 5; ","key":"d5RKOBEC0y"},{"type":"output","id":"1v6fDwuRtSz3EKfMK5x7O","data":[],"key":"ubKoTVH8Fw"}],"key":"nPC24yAUzn"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# xx represents the flattened 1D elastic maps we are trying to improve via the cost function\nxx = xx0.copy()\n\n# Background noise subtraction for improved convergence\nxx = np.where((xx < .2), 0, xx)\n\n# Auxiliary Functions for measuring the cost functions\nlsqFun = lambda inData : 0.5 * np.linalg.norm(A.dot(inData**gamma) - HAADF) **2\npoissonFun = lambda inData : np.sum(xx0 * np.log(inData + 1e-8) - inData)\n\n# Main Loop\n\n# Initialize the three cost functions components \ncostHAADF = np.zeros(nIter,dtype=np.float32); costChem = np.zeros(nIter, dtype=np.float32); costTV = np.zeros(nIter, dtype=np.float32);\n\nfor kk in tqdm(range(nIter)):\n\t# Solve for the first two optimization functions $\\Psi_1$ and $\\Psi_2$\n\txx -=  gamma * spdiags(xx**(gamma - 1), [0], nz*nx*ny, nz*nx*ny) * lambdaHAADF * A.transpose() * (A.dot(xx**gamma) - HAADF) + lambdaChem * (1 - xx0 / (xx + bkg))\n\n\t# Enforce positivity constraint\n\txx[xx<0] = 0\n\n\t# FGP Regularization if turned on\n\tif regularize:\n\t\tfor zz in range(nz):\n\t\t\txx[zz*nPix:(zz+1)*nPix] = reg.fgp_tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny), lambdaTV, nIter_TV).flatten()\n\n\t\t\t# Measure TV Cost Function\n\t\t\tcostTV[kk] += reg.tv( xx[zz*nPix:(zz+1)*nPix].reshape(nx,ny) )\n\t\t\t\n\t# Measure $\\Psi_1$ and $\\Psi_2$ Cost Functions\n\tcostHAADF[kk] = lsqFun(xx); costChem[kk] = poissonFun(xx)","key":"ZBUCktIdtM"},{"type":"output","id":"QT-sUIp5W2HVH3ndfbDSN","data":[{"name":"stderr","output_type":"stream","text":"100%|███████████████████████████████████████████████████████████████████████████| 30/30 [00:01<00:00, 18.97it/s]\n"}],"key":"iDXOaws2qH"}],"key":"NZfLcUgNA3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Display Cost Functions and Descent Parameters\nutils.plot_convergence(costHAADF, lambdaHAADF, costChem, lambdaChem, costTV, lambdaTV)\n# Show Reconstructed Signal\nfig, ax = plt.subplots(2, len(elem_names), figsize=(12, 8))\nax = ax.flatten()\n\nfor ii in range(len(elem_names)):\n    ax[ii].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx, ny), cmap='gray')\n    ax[ii].set_title(elem_names[ii])\n    ax[ii].axis('off')\n    \n    ax[ii + len(elem_names)].imshow(xx[ii*(nx*ny):(ii+1)*(nx*ny)].reshape(nx, ny)[40:100, 50:110], cmap='gray')\n    ax[ii + len(elem_names)].set_title(elem_names[ii] + ' Cropped')\n    ax[ii + len(elem_names)].axis('off')\n\nplt.show()","key":"xZBFZ2POK5"},{"type":"output","id":"Vm7AiOCetbTcYmONOSj2R","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1fe9b6b52c5b1a66aaa36100c2c18589","path":"/1fe9b6b52c5b1a66aaa36100c2c18589.png"},"text/plain":{"content":"<Figure size 1200x600 with 3 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"bc50ead73a54bb398df2e6868eec74e4","path":"/bc50ead73a54bb398df2e6868eec74e4.png"},"text/plain":{"content":"<Figure size 1200x800 with 6 Axes>","content_type":"text/plain"}}}],"key":"UTLiTcKvVW"}],"key":"owcPezmkNI"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"save_folder_name='test'\nutils.save_data(save_folder_name, xx0, xx, HAADF, A.dot(xx**gamma), elem_names, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)","key":"qVimzQfcS1"},{"type":"output","id":"CsifF7loBaZg2MHCWlyxX","data":[{"ename":"FileNotFoundError","evalue":"[Errno 2] Unable to create file (unable to open file: name = 'test/Fused_Reconstruction.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 602)","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)\nCell \u001b[0;32mIn[9], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m save_folder_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtest\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m----> 2\u001b[0m \u001b[43mutils\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msave_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43msave_folder_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxx0\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mxx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mA\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdot\u001b[49m\u001b[43m(\u001b[49m\u001b[43mxx\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mgamma\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43melem_names\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mny\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostChem\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcostTV\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaHAADF\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaChem\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlambdaTV\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgamma\u001b[49m\u001b[43m)\u001b[49m\n\nFile \u001b[0;32m~/Desktop/PhD/Projects/20240312_2D_tutorial/data/fusion_utils.py:10\u001b[0m, in \u001b[0;36msave_data\u001b[0;34m(folder_name, chem_original, chem_fused, haadf_original, haadf_fused, eList, nx, ny, costHAADF, costChem, costTV, lambdaHAADF, lambdaChem, lambdaTV, gamma)\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21msave_data\u001b[39m(folder_name, chem_original, chem_fused, haadf_original, haadf_fused, eList, nx, ny,costHAADF,costChem,costTV,lambdaHAADF,lambdaChem,lambdaTV,gamma):\n\u001b[0;32m---> 10\u001b[0m     file \u001b[38;5;241m=\u001b[39m \u001b[43mh5py\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mFile\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfolder_name\u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m/Fused_Reconstruction.h5\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mw\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m     11\u001b[0m     file\u001b[38;5;241m.\u001b[39mcreate_dataset(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mraw_haadf\u001b[39m\u001b[38;5;124m'\u001b[39m, data\u001b[38;5;241m=\u001b[39mhaadf_original)\n\u001b[1;32m     12\u001b[0m     file\u001b[38;5;241m.\u001b[39mcreate_dataset(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfused_haadf\u001b[39m\u001b[38;5;124m'\u001b[39m, data\u001b[38;5;241m=\u001b[39mhaadf_fused)\n\nFile \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/h5py/_hl/files.py:562\u001b[0m, in \u001b[0;36mFile.__init__\u001b[0;34m(self, name, mode, driver, libver, userblock_size, swmr, rdcc_nslots, rdcc_nbytes, rdcc_w0, track_order, fs_strategy, fs_persist, fs_threshold, fs_page_size, page_buf_size, min_meta_keep, min_raw_keep, locking, alignment_threshold, alignment_interval, meta_block_size, **kwds)\u001b[0m\n\u001b[1;32m    553\u001b[0m     fapl \u001b[38;5;241m=\u001b[39m make_fapl(driver, libver, rdcc_nslots, rdcc_nbytes, rdcc_w0,\n\u001b[1;32m    554\u001b[0m                      locking, page_buf_size, min_meta_keep, min_raw_keep,\n\u001b[1;32m    555\u001b[0m                      alignment_threshold\u001b[38;5;241m=\u001b[39malignment_threshold,\n\u001b[1;32m    556\u001b[0m                      alignment_interval\u001b[38;5;241m=\u001b[39malignment_interval,\n\u001b[1;32m    557\u001b[0m                      meta_block_size\u001b[38;5;241m=\u001b[39mmeta_block_size,\n\u001b[1;32m    558\u001b[0m                      \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[1;32m    559\u001b[0m     fcpl \u001b[38;5;241m=\u001b[39m make_fcpl(track_order\u001b[38;5;241m=\u001b[39mtrack_order, fs_strategy\u001b[38;5;241m=\u001b[39mfs_strategy,\n\u001b[1;32m    560\u001b[0m                      fs_persist\u001b[38;5;241m=\u001b[39mfs_persist, fs_threshold\u001b[38;5;241m=\u001b[39mfs_threshold,\n\u001b[1;32m    561\u001b[0m                      fs_page_size\u001b[38;5;241m=\u001b[39mfs_page_size)\n\u001b[0;32m--> 562\u001b[0m     fid \u001b[38;5;241m=\u001b[39m \u001b[43mmake_fid\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muserblock_size\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfapl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfcpl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mswmr\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mswmr\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    564\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(libver, \u001b[38;5;28mtuple\u001b[39m):\n\u001b[1;32m    565\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_libver \u001b[38;5;241m=\u001b[39m libver\n\nFile \u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/h5py/_hl/files.py:241\u001b[0m, in \u001b[0;36mmake_fid\u001b[0;34m(name, mode, userblock_size, fapl, fcpl, swmr)\u001b[0m\n\u001b[1;32m    239\u001b[0m     fid \u001b[38;5;241m=\u001b[39m h5f\u001b[38;5;241m.\u001b[39mcreate(name, h5f\u001b[38;5;241m.\u001b[39mACC_EXCL, fapl\u001b[38;5;241m=\u001b[39mfapl, fcpl\u001b[38;5;241m=\u001b[39mfcpl)\n\u001b[1;32m    240\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m mode \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mw\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m--> 241\u001b[0m     fid \u001b[38;5;241m=\u001b[39m \u001b[43mh5f\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcreate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mh5f\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mACC_TRUNC\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfapl\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfapl\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfcpl\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mfcpl\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    242\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m mode \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124ma\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m    243\u001b[0m     \u001b[38;5;66;03m# Open in append mode (read/write).\u001b[39;00m\n\u001b[1;32m    244\u001b[0m     \u001b[38;5;66;03m# If that fails, create a new file only if it won't clobber an\u001b[39;00m\n\u001b[1;32m    245\u001b[0m     \u001b[38;5;66;03m# existing one (ACC_EXCL)\u001b[39;00m\n\u001b[1;32m    246\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\nFile \u001b[0;32mh5py/_objects.pyx:54\u001b[0m, in \u001b[0;36mh5py._objects.with_phil.wrapper\u001b[0;34m()\u001b[0m\n\nFile \u001b[0;32mh5py/_objects.pyx:55\u001b[0m, in \u001b[0;36mh5py._objects.with_phil.wrapper\u001b[0;34m()\u001b[0m\n\nFile \u001b[0;32mh5py/h5f.pyx:122\u001b[0m, in \u001b[0;36mh5py.h5f.create\u001b[0;34m()\u001b[0m\n\n\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] Unable to create file (unable to open file: name = 'test/Fused_Reconstruction.h5', errno = 2, error message = 'No such file or directory', flags = 13, o_flags = 602)"}],"key":"ISzRpxfo9F"}],"key":"e6XUB4SvaZ"}],"key":"g8XOZ24PIR"},"references":{"cite":{"order":[],"data":{}}}}